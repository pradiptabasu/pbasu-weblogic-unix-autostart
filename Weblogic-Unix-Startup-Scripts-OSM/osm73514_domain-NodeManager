#!/bin/sh
#
# osm73514_domain-NodeManager Oracle Weblogic NodeManager service
#
# chkconfig:   345 85 15
# description: Oracle Weblogic NodeManager service
# The script needs to be saved as /etc/init.d/osm73514_domain-NodeManager and then issue chkconfig â€“add osm73514_domain-NodeManager as root
#
### BEGIN INIT INFO
# Provides: osm73514_domain-NodeManager
# Required-Start: $network $local_fs
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: Oracle Weblogic NodeManager service.
# Description: Starts and stops Oracle Weblogic NodeManager for osm73514_domain.
### END INIT INFO

. /etc/rc.d/init.d/functions

export MW_HOME="/home/ec2-user/Oracle/Middleware/Oracle_Home"
export DOMAIN_HOME="$MW_HOME/user_projects/domains/osm73514_domain"
export JAVA_HOME="/usr/java/jdk1.8.0_181-amd64/"

DAEMON_USER="ec2-user"
PROCESS_STRING="^.*$DOMAIN_HOME.*weblogic.NodeManager.*"

source $MW_HOME/wlserver/server/bin/setWLSEnv.sh > /dev/null
export NodeManagerHome="$DOMAIN_HOME/nodemanager"
NodeManagerLockFile="$NodeManagerHome/nodemanager.log.lck"
PROGRAM="$DOMAIN_HOME/bin/startNodeManager.sh"
SERVICE_NAME=`/bin/basename $0`
LOCKFILE="/var/lock/subsys/$SERVICE_NAME"
OUT_FILE="$NodeManagerHome/nodemanager.out"

RETVAL=0

start() {
	OLDPID=`/usr/bin/pgrep -f $PROCESS_STRING`
	if [ ! -z "$OLDPID" ]; then
		echo "$SERVICE_NAME is already running (pid $OLDPID) !"
		exit
	fi
	echo -n $"Starting $SERVICE_NAME: "
	/bin/su $DAEMON_USER -c "$PROGRAM &" >> $OUT_FILE 2>&1  &
	RETVAL=$?
    if [ $RETVAL -eq 0 ] ; then
        wait_for "socket listener started on port"
    else
        echo "FAILED: $RETVAL. Please check $OUT_FILE for more information."
    fi
    echo
#	[ $RETVAL -eq 0 ] && touch $LOCKFILE
}

wait_for() {
    res=$(cat "$OUT_FILE" | fgrep -c "$1")
    count=60
    while [[ ! $res -gt 0 ]] && [[ $count -gt 0 ]]
    do
        sleep 1
        count=$(($count - 1))
        res=$(cat "$OUT_FILE" | fgrep -c "$1")
    done
    res=$(cat "$OUT_FILE" | fgrep -c "$1")
    if [ ! $res -gt 0 ]; then
        echo "FAILED or took too long time to start. Please check $OUT_FILE for more information."
    else
        echo "OK"
        touch $LOCKFILE
    fi
}

stop() {
	echo -n $"Stopping $SERVICE_NAME: "
	OLDPID=`/usr/bin/pgrep -f $PROCESS_STRING`
	if [ "$OLDPID" != "" ]; then
		/bin/kill -TERM $OLDPID
	else
		/bin/echo "$SERVICE_NAME is stopped"
	fi
	echo
	/bin/rm -f $NodeManagerLockFile
	[ $RETVAL -eq 0 ] && rm -f $LOCKFILE
}

restart() {
	stop
	sleep 10
	start
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart|force-reload|reload)
		restart
		;;
	condrestart|try-restart)
		[ -f $LOCKFILE ] && restart
		;;
	status)
		OLDPID=`/usr/bin/pgrep -f $PROCESS_STRING`
		if [ "$OLDPID" != "" ]; then
			/bin/echo "$SERVICE_NAME is running (pid: $OLDPID)"
		else
			/bin/echo "$SERVICE_NAME is stopped"
		fi
		RETVAL=$?
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
		exit 1
esac

exit $RETVAL